#pragma checksum "D:\C#\_Asyst-lab\ImageManager\ImageManager.MVC\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47c338d9a21b87c1f810045dc9ce11dd6246e103"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\C#\_Asyst-lab\ImageManager\ImageManager.MVC\Views\_ViewImports.cshtml"
using ImageManager.MVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\C#\_Asyst-lab\ImageManager\ImageManager.MVC\Views\_ViewImports.cshtml"
using ImageManager.MVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47c338d9a21b87c1f810045dc9ce11dd6246e103", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5706fa34018548bef22ecc506d5e88bcea4b523a", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ImageManager.MVC.ViewModels.IndexViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\C#\_Asyst-lab\ImageManager\ImageManager.MVC\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Главная";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""container body-content"">
    <div class=""col-sm-12"">
        <br />
        <div class=""row pt-sm-3 pb-sm-3"">
            <input type=""hidden"" id=""imageUrl"" />
            <input type=""file"" accept="".jpg, .jpeg, .png"" hidden id=""fileInputItem"" onchange=""inputFile_changed(this.files)"" />
            <a id=""downloadLnk"" download=""File from online editor.jpg"" hidden></a>

            <button id=""openButton"" class=""btn btn-menu btn-menu-open ml-0"" onclick=""open_click();""> Открыть</button>
            <button id=""saveButtton"" class=""btn btn-menu btn-menu-save mr-sm-5"" disabled title=""Сначала откройте изображение."" onclick=""save_click();"">Сохранить</button>
            <button id=""canselAllButtton"" class=""btn btn-menu btn-menu-cancel"" disabled title=""Сначала откройте изображение."" onclick=""canselAll_click();"">Откатить всё</button>
        </div>

        <div class=""row work-div"">
            <div id=""imageActionDiv"" class=""pl-sm-4 pr-sm-4 border rounded tool-div"" title=""Сначала откройте и");
            WriteLiteral(@"зображение."">
                <b>Модераторы</b><br />
                <button id=""cutAction"" class=""btn btn-filter"" disabled>обрезать</button><br />
                <button id=""resizeAction"" class=""btn btn-filter"" disabled>изменить размер</button><br />
                <br />

                <b>Повороты</b><br />
                <button id=""rightRotate"" class=""btn btn-filter"" disabled onclick=""rotateRight_click()"">поворот вправо</button><br />
                <button id=""leftRotate"" class=""btn btn-filter"" disabled onclick=""rotateLeft_click()"">поворот влево</button><br />
                <br />

                <b>Фильтры</b><br />
                <button id=""blurFilter"" class=""btn btn-filter"" disabled onclick=""blurFiltrButton_click()"">размытие</button><br />
                <button id=""brightnessFilter"" class=""btn btn-filter"" disabled onclick=""brightnessFiltrButton_click()"">яркое</button><br />
                <button id=""notBrightnessFilter"" class=""btn btn-filter"" disabled onclick=""notBrightne");
            WriteLiteral(@"ssFiltrButton_click()"">темное</button><br />

                <button id=""contrastFilter"" class=""btn btn-filter"" disabled onclick=""contrastFiltrButton_click()"">контрастное</button><br />
                <button id=""shadowFilter"" class=""btn btn-filter"" disabled onclick=""shadowFiltrButton_click()"">тени</button><br />
                <button id=""grayscaleFilter"" class=""btn btn-filter"" disabled onclick=""grayscaleButton_click()"">черно-белое</button><br />

                <button id=""hueRotate1Filter"" class=""btn btn-filter"" disabled onclick=""hueRotate1Button_click()"">замена цвета 1</button><br />
                <button id=""hueRotate2Filter"" class=""btn btn-filter"" disabled onclick=""hueRotate2Button_click()"">замена цвета 2</button><br />
                <button id=""hueRotate3Filter"" class=""btn btn-filter"" disabled onclick=""hueRotate3Button_click()"">замена цвета 3</button><br />

                <button id=""invertFilter"" class=""btn btn-filter"" disabled onclick=""invertButton_click()"">неготив</button><br />");
            WriteLiteral(@"
                <button id=""sepiaFilter"" class=""btn btn-filter"" disabled onclick=""sepiaFiltrButton_click()"">старина</button><br />
                <button id=""noneFilter"" class=""btn btn-filter"" disabled onclick=""noneFiltrButton_click()"">нет</button><br />
            </div>

            <div class=""bg-secondary canvas-div"">
                <canvas id=""myCanvas""");
            BeginWriteAttribute("class", " class=\"", 3535, "\"", 3543, 0);
            EndWriteAttribute();
            WriteLiteral("></canvas>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br />\r\n\r\n<script>\r\n    function addImage(url) {\r\n\r\n        console.log(\'start\');\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
#nullable restore
#line 62 "D:\C#\_Asyst-lab\ImageManager\ImageManager.MVC\Views\Home\Index.cshtml"
             Write(Url.Action("AddImage", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { imageUrl : url },
            dataType: 'text',
            success: function (result) {
                console.log(result.msg);
            },
            error: function (result) {
                console.log('error');
            },
        })
        console.log('finish');
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ImageManager.MVC.ViewModels.IndexViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
